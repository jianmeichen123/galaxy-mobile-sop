<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.galaxyinternet.rili.model.ScheduleDepartUno">

  <resultMap id="BaseResultMap" type="com.galaxyinternet.rili.model.ScheduleDepartUno">
     <id column="id" property="id" jdbcType="BIGINT" />
    <result column="remark_type" property="remarkType" jdbcType="TINYINT" />
    <result column="remark_id" property="remarkId" jdbcType="BIGINT" />
    <result column="department_id" property="departmentId" jdbcType="BIGINT" />
    <result column="user_count" property="userCount" jdbcType="INTEGER" />
    <result column="created_time" property="createdTime" jdbcType="BIGINT" />
    <result column="created_id" property="createdId" jdbcType="BIGINT" />
    <result column="updated_time" property="updatedTime" jdbcType="BIGINT" />
    <result column="updated_id" property="updatedId" jdbcType="BIGINT" />
  </resultMap>
  
  
  
  <sql id="Base_Column_List" >
    id, remark_type, remark_id, department_id, user_count, created_time, created_id, 
    updated_time, updated_id
  </sql>
	
	<sql id="Base_Where_Clause">
		<where>
			<trim prefixOverrides="and">
				<if test="id != null"> and id =#{id}</if>
				<if test="remarkType != null"> and remark_type = #{remarkType,jdbcType=TINYINT} </if>
				<if test="remarkId != null"> and remark_id = #{remarkId,jdbcType=BIGINT} </if>			
				<if test="departmentId != null"> and department_id = #{departmentId,jdbcType=BIGINT} </if>
				
				<if test="userCount != null"> and user_count = #{userCount,jdbcType=INTEGER} </if>
				<if test="createdTime != null"> and created_time = #{createdTime,jdbcType=BIGINT} </if>		
				<if test="createdId != null"> and created_id = #{createdId,jdbcType=BIGINT} </if>	
				<if test="updatedTime != null"> and updated_time = #{updatedTime,jdbcType=BIGINT} </if>
				<if test="updatedId != null"> and updated_id = #{updatedId,jdbcType=BIGINT} </if>

			</trim>
		</where>
		<if test="sorting != null">order by ${sorting}</if>
		<if test="offset != null and limit != null">
			limit #{offset}, #{limit}
		</if>
	</sql>




	<insert id="insert"  useGeneratedKeys="true" keyProperty="id" parameterType="com.galaxyinternet.rili.model.ScheduleDepartUno">
		insert into schedule_depart_uno (id, remark_type, remark_id, 
	      department_id, user_count, 
	      created_time, created_id, updated_time, 
	      updated_id)
	    values (#{id,jdbcType=BIGINT}, #{remarkType,jdbcType=TINYINT}, #{remarkId,jdbcType=BIGINT}, 
	      #{departmentId,jdbcType=BIGINT}, #{userCount,jdbcType=INTEGER}, 
	      #{createdTime,jdbcType=BIGINT}, #{createdId,jdbcType=BIGINT}, #{updatedTime,jdbcType=BIGINT}, 
	      #{updatedId,jdbcType=BIGINT})
	</insert>

	<!-- 根据ID查询 -->
	<select id="selectById" parameterType="java.lang.Long" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from schedule_depart_uno
		where id = #{id,jdbcType=BIGINT}
	</select>

	<!-- 查询 -->
	<select id="select" resultMap="BaseResultMap" parameterType="java.util.Map">
		select
		<include refid="Base_Column_List" />
		from schedule_depart_uno
		<include refid="Base_Where_Clause" />
	</select>

	<!-- 查询总数 -->
	<select id="selectCount" resultType="java.lang.Long" parameterType="java.util.Map">
		select count(id) from schedule_depart_uno
		<include refid="Base_Where_Clause" />
	</select>

	<!-- 删除 -->
	<delete id="delete" parameterType="java.util.Map">
		delete from schedule_depart_uno
		<include refid="Base_Where_Clause" />
	</delete>

	<!-- 根据ID删除 -->
	<delete id="deleteById" parameterType="java.lang.Long">
		delete from schedule_depart_uno
		where id = #{id,jdbcType=BIGINT}
	</delete>


	<update id="updateById" parameterType="com.galaxyinternet.rili.model.ScheduleDepartUno">
		update schedule_depart_uno
		<set>
		      <if test="remarkType != null" > remark_type = #{remarkType,jdbcType=TINYINT}, </if>
		      <if test="remarkId != null" > remark_id = #{remarkId,jdbcType=BIGINT},  </if>
		      <if test="departmentId != null" > department_id = #{departmentId,jdbcType=BIGINT}, </if>
		      <if test="userCount != null" > user_count = #{userCount,jdbcType=INTEGER}, </if>
		      <if test="createdTime != null" > created_time = #{createdTime,jdbcType=BIGINT}, </if>
		      <if test="createdId != null" > created_id = #{createdId,jdbcType=BIGINT}, </if>
		      <if test="updatedTime != null" > updated_time = #{updatedTime,jdbcType=BIGINT}, </if>
		      <if test="updatedId != null" > updated_id = #{updatedId,jdbcType=BIGINT} </if>
		</set>
		where id = #{id,jdbcType=BIGINT}
	</update>
 
  <!-- 更新 -->
	<update id="updateByIdSelective" parameterType="com.galaxyinternet.rili.model.ScheduleDepartUno">
		update schedule_depart_uno
		<set>
		      <if test="remarkType != null" > remark_type = #{remarkType,jdbcType=TINYINT}, </if>
		      <if test="remarkId != null" > remark_id = #{remarkId,jdbcType=BIGINT},  </if>
		      <if test="departmentId != null" > department_id = #{departmentId,jdbcType=BIGINT}, </if>
		      <if test="userCount != null" > user_count = #{userCount,jdbcType=INTEGER}, </if>
		      <if test="createdTime != null" > created_time = #{createdTime,jdbcType=BIGINT}, </if>
		      <if test="createdId != null" > created_id = #{createdId,jdbcType=BIGINT}, </if>
		      <if test="updatedTime != null" > updated_time = #{updatedTime,jdbcType=BIGINT}, </if>
		      <if test="updatedId != null" > updated_id = #{updatedId,jdbcType=BIGINT} </if>
		</set>
		<where>
			<trim prefixOverrides="and">
				<if test="id != null"> and id =#{id}</if>
				<if test="remarkType != null"> and remark_type = #{remarkType,jdbcType=TINYINT} </if>
				<if test="remarkId != null"> and remark_id = #{remarkId,jdbcType=BIGINT} </if>			
				<if test="departmentId != null"> and department_id = #{departmentId,jdbcType=BIGINT} </if>
				<if test="userCount != null"> and user_count = #{userCount,jdbcType=INTEGER} </if>
				<if test="createdTime != null"> and created_time = #{createdTime,jdbcType=BIGINT} </if>		
				<if test="createdId != null"> and created_id = #{createdId,jdbcType=BIGINT} </if>	
				<if test="updatedTime != null"> and updated_time = #{updatedTime,jdbcType=BIGINT} </if>
				<if test="updatedId != null"> and updated_id = #{updatedId,jdbcType=BIGINT} </if>
			</trim>
		</where>
	</update>
 
 
 
</mapper>

